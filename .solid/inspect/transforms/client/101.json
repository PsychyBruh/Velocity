{
  "id": "/workspaces/Velocity/src/components/Bookmark.tsx",
  "deps": [],
  "plugins": [
    "vite:load-fallback",
    "solid"
  ],
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import Favicon from \"./Favicon\";\nimport { createSignal } from \"solid-js\";\nimport type { JSX } from \"solid-js\";\nimport type BookmarkAPI from \"~/API/Bookmark\";\nimport ContextItem from \"~/API/ContextItem\";\nimport Tab from \"~/API/Tab\";\nimport { open } from \"~/manager/clickManager\";\nimport { getActiveTab } from \"~/util\";\n\ninterface BookmarkProps {\n  sortable: any;\n  bookmark: BookmarkAPI;\n}\n\nexport default function Bookmark(props: BookmarkProps): JSX.Element {\n  const { sortable, bookmark } = props;\n\n  function handleClick(event: MouseEvent) {\n    if (/^javascript:/.test(bookmark.url)) {\n      getActiveTab().executeScript(\n        decodeURIComponent(bookmark.url.replace(/^javascript:/, \"\"))\n      );\n    } else {\n      if (event.ctrlKey) {\n        new Tab(bookmark.url, false);\n      } else {\n        getActiveTab().navigate(bookmark.url);\n      }\n    }\n  }\n\n  return (\n    <div\n      // @ts-ignore\n      use:sortable\n      onClick={handleClick}\n      class=\"toolbarbutton-1 h-6 flex items-center gap-1 rounded cursor-default px-1 select-none\"\n      oncontextmenu={(event: MouseEvent & { data?: ContextItem[] }): void => {\n        event.data = [\n          new ContextItem({\n            text: \"Open in new tab\",\n            onClick: () => {\n              open(event, bookmark.url, false, true);\n            }\n          }),\n          new ContextItem({\n            separator: true\n          }),\n          new ContextItem({\n            text: \"Delete\",\n            onClick: () => {\n              bookmark.delete();\n            }\n          }),\n          new ContextItem({\n            separator: true\n          })\n        ];\n      }}\n    >\n      <div class=\"w-[15px] h-[15px]\">\n        <Favicon src={createSignal<string>(bookmark.icon)[0]}></Favicon>\n      </div>\n      {bookmark.name}\n    </div>\n  );\n}\n",
      "start": 1681131424932,
      "end": 1681131425602
    },
    {
      "name": "solid",
      "result": "import { template as _$template } from \"solid-js/web\";\nimport { delegateEvents as _$delegateEvents } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { use as _$use } from \"solid-js/web\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<div class=\"toolbarbutton-1 h-6 flex items-center gap-1 rounded cursor-default px-1 select-none\"><div class=\"w-[15px] h-[15px]\"></div></div>`, 4);\nimport Favicon from \"./Favicon\";\nimport { createSignal } from \"solid-js\";\nimport ContextItem from \"~/API/ContextItem\";\nimport Tab from \"~/API/Tab\";\nimport { open } from \"~/manager/clickManager\";\nimport { getActiveTab } from \"~/util\";\nexport default function Bookmark(props) {\n  const {\n    sortable,\n    bookmark\n  } = props;\n  function handleClick(event) {\n    if (/^javascript:/.test(bookmark.url)) {\n      getActiveTab().executeScript(decodeURIComponent(bookmark.url.replace(/^javascript:/, \"\")));\n    } else {\n      if (event.ctrlKey) {\n        new Tab(bookmark.url, false);\n      } else {\n        getActiveTab().navigate(bookmark.url);\n      }\n    }\n  }\n  return (() => {\n    const _el$ = _tmpl$.cloneNode(true),\n      _el$2 = _el$.firstChild;\n    _el$.$$contextmenu = event => {\n      event.data = [new ContextItem({\n        text: \"Open in new tab\",\n        onClick: () => {\n          open(event, bookmark.url, false, true);\n        }\n      }), new ContextItem({\n        separator: true\n      }), new ContextItem({\n        text: \"Delete\",\n        onClick: () => {\n          bookmark.delete();\n        }\n      }), new ContextItem({\n        separator: true\n      })];\n    };\n    _el$.$$click = handleClick;\n    _$use(sortable, _el$, () => true);\n    _$insert(_el$2, _$createComponent(Favicon, {\n      get src() {\n        return createSignal(bookmark.icon)[0];\n      }\n    }));\n    _$insert(_el$, () => bookmark.name, null);\n    return _el$;\n  })();\n}\n_$delegateEvents([\"click\", \"contextmenu\"]);",
      "start": 1681131425603,
      "end": 1681131425614
    }
  ],
  "virtual": false
}